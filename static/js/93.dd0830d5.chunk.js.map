{"version":3,"file":"static/js/93.dd0830d5.chunk.js","mappings":"kRAEaA,EAAcC,EAAAA,EAAAA,QAAH,sBAEXC,EAAWD,EAAAA,EAAAA,GAAH,wRAaRE,EAAYF,EAAAA,EAAAA,GAAH,6FAMTG,EAAaH,EAAAA,EAAAA,IAAH,yGAOVI,EAAYJ,EAAAA,EAAAA,EAAH,yFAMTK,EAAYL,EAAAA,EAAAA,EAAH,4C,kBCkBtB,EAzCoB,WAClB,OAAwCM,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE+BC,EAAAA,GAAoBH,GAFnD,OAEUF,EAFV,OAGIC,EAAgBD,GAHpB,gDAKIM,EAAAA,GAAAA,MAAA,yCALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACL,KAGF,SAACV,EAAD,WACE,SAACE,EAAD,UACGM,GACCA,EAAaQ,KAAKC,KAChB,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACE,UAAClB,EAAD,YACE,SAACC,EAAD,CACEkB,IACEH,EAAY,yCAC0BA,GAClC,4EAENI,IAAKH,KAEP,SAACf,EAAD,UAAYe,KACZ,SAAC,EAAD,UAAYC,MAVEH,EADlB,OAkBX,C,8LClDKM,EAAU,mCAEhBC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,oGACRD,EAAAA,GAAAA,IAAA,qCAAwCD,IADhC,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAW,mCAAG,WAAMC,GAAN,uFACFL,EAAAA,GAAAA,IAAA,+BACGD,EADH,4DAC8DM,IAF5D,cACnBH,EADmB,yBAIlBA,EAASC,MAJS,2CAAH,sDAOXG,EAAe,mCAAG,WAAMrB,GAAN,uFACNe,EAAAA,GAAAA,IAAA,gBACZf,EADY,oBACEc,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAe,mCAAG,WAAMtB,GAAN,uFACNe,EAAAA,GAAAA,IAAA,gBACZf,EADY,4BACUc,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfK,EAAe,mCAAG,WAAMvB,GAAN,uFACNe,EAAAA,GAAAA,IAAA,gBACZf,EADY,4BACUc,EADV,2BADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastSection = styled.section``;\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ActorInfo = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ActorPhoto = styled.img`\n  margin-bottom: 5px;\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n`;\n\nexport const ActorName = styled.p`\n  font-weight: bold;\n  font-size: 10px;\n  margin-bottom: 5px;\n`;\n\nexport const Сharacter = styled.p`\n  font-size: 10px;\n`;\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n  CastSection,\r\n  CastList,\r\n  ActorInfo,\r\n  ActorPhoto,\r\n  ActorName,\r\n  Сharacter,\r\n} from './Cast.styled';\r\nimport * as API from '../../services/api';\r\n\r\nexport const Cast = () => {\r\n  const [movieCredits, setMovieCredits] = useState(null);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    async function fetchMovieCredits() {\r\n      try {\r\n        const movieCredits = await API.getMovieCredits(id);\r\n        setMovieCredits(movieCredits);\r\n      } catch (error) {\r\n        toast.error(`Oops something went wrong, try again.`);\r\n      }\r\n    }\r\n    fetchMovieCredits();\r\n  }, [id]);\r\n\r\n  return (\r\n    <CastSection>\r\n      <CastList>\r\n        {movieCredits &&\r\n          movieCredits.cast.map(\r\n            ({ cast_id, profile_path, name, character }) => (\r\n              <ActorInfo key={cast_id}>\r\n                <ActorPhoto\r\n                  src={\r\n                    profile_path\r\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\r\n                      : 'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png'\r\n                  }\r\n                  alt={name}\r\n                />\r\n                <ActorName>{name}</ActorName>\r\n                <Сharacter>{character}</Сharacter>\r\n              </ActorInfo>\r\n            )\r\n          )}\r\n      </CastList>\r\n    </CastSection>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import axios from 'axios';\n\nconst API_KEY = '3ff086ca8fded08ba42938358b3327b4';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["CastSection","styled","CastList","ActorInfo","ActorPhoto","ActorName","Сharacter","useState","movieCredits","setMovieCredits","id","useParams","useEffect","API","toast","fetchMovieCredits","cast","map","cast_id","profile_path","name","character","src","alt","API_KEY","axios","getTrendingMovies","response","data","searchMovie","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}