{"version":3,"file":"static/js/886.714b9165.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: red;\n  }\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main``;\n\nexport const Box = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const MamoviePoster = styled.img`\n  width: 200px;\n  margin-right: 20px;\n`;\n\nexport const MamovieDetails = styled.div``;\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const UserScore = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Overview = styled.h3`\n  margin-bottom: 5px;\n`;\n\nexport const OverviewContent = styled.p`\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.h3`\n  margin-bottom: 5px;\n`;\n\nexport const GenresContent = styled.p``;\n\nexport const AdditionalInfo = styled.div``;\n\nexport const AdditionalInfoTitle = styled.h3`\n  margin-bottom: 5px;\n`;\n\nexport const AdditionalInfoList = styled.ul``;\n\nexport const AdditionalInfoItem = styled.li`\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport {\n  Main,\n  Box,\n  MamoviePoster,\n  MamovieDetails,\n  Title,\n  UserScore,\n  Overview,\n  OverviewContent,\n  Genres,\n  GenresContent,\n  AdditionalInfo,\n  AdditionalInfoTitle,\n  AdditionalInfoList,\n  AdditionalInfoItem,\n} from './MovieDetails.styled';\nimport * as API from '../../services/api';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovieDetails() {\n      try {\n        const movieDetails = await API.getMovieDetails(id);\n        setMovieDetails(movieDetails);\n      } catch (error) {\n        toast.error(`Oops something went wrong, try again.`);\n      }\n    }\n    fetchMovieDetails();\n  }, [id]);\n\n  if (!movieDetails) {\n    return null;\n  }\n\n  return (\n    <Main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      <Box>\n        <MamoviePoster\n          src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n        />\n        <MamovieDetails>\n          <Title>{movieDetails.title}</Title>\n          <UserScore>\n            User score: {Math.round(movieDetails.vote_average * 10)}%\n          </UserScore>\n          <Overview>Overview</Overview>\n          <OverviewContent>{movieDetails.overview}</OverviewContent>\n          <Genres>Genres</Genres>\n          <GenresContent>\n            {movieDetails.genres.map(genre => genre.name).join(', ')}\n          </GenresContent>\n        </MamovieDetails>\n      </Box>\n      <AdditionalInfo>\n        <AdditionalInfoTitle>Additional information</AdditionalInfoTitle>\n        <AdditionalInfoList>\n          <AdditionalInfoItem>\n            <Link to=\"cast\" state={{ ...location.state }}>\n              Cast\n            </Link>\n          </AdditionalInfoItem>\n          <AdditionalInfoItem>\n            <Link to=\"reviews\" state={{ ...location.state }}>\n              Reviews\n            </Link>\n          </AdditionalInfoItem>\n        </AdditionalInfoList>\n      </AdditionalInfo>\n      <Outlet />\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '3ff086ca8fded08ba42938358b3327b4';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","Main","Box","MamoviePoster","MamovieDetails","Title","UserScore","Overview","OverviewContent","Genres","GenresContent","AdditionalInfo","AdditionalInfoTitle","AdditionalInfoList","AdditionalInfoItem","useState","movieDetails","setMovieDetails","id","useParams","location","useLocation","backLinkHref","state","from","useEffect","API","toast","fetchMovieDetails","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","join","API_KEY","axios","getTrendingMovies","response","data","searchMovie","query","getMovieDetails","getMovieCredits","getMovieReviews"],"sourceRoot":""}